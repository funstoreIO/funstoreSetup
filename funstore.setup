#!/bin/bash

# Installation file for funstore
# Coyright mLabs Research Inc., 2014


# Basic Settings ####
VERSION=v0.0.3
BOARD="raspberrypi"
MODIFIED="Sept 15, 2014"
BINDIR=/usr/bin
fileName=`basename $0`
CURL="/usr/bin/curl"
PHP="/usr/bin/php5"
APACHE="/usr/sbin/apache2"
JQ="/usr/local/bin/jq"
TEMPVAR=""

#set -e 

checkRootStatus()
{
# Make sure this script is being run by root
if [[ $EUID -ne 0 ]]; then
   echo "You must be root to run this script to connect to Funstore" 1>&2
   echo "Try: sudo "$0 1>&2
   exit 1
fi
}

removeFunstore()
{
rm -fr /usr/share/berryio || { echo -e "Install failed!" 1>&2; exit 1; }
git clone https://github.com/funstoreHQ/funstore.git /usr/share/funstore
}

setDefaultConfig()
{
cp -R /usr/share/funstore/funstore/config/funstore /etc || { echo -e "Install failed!" 1>&2; exit 1; }
cp -R /usr/share/funstore/funstore/config/apache2 /etc || { echo -e "Install failed!" 1>&2; exit 1; }
cp -R /usr/share/funstore/funstore/config/sudoers.d /etc || { echo -e "Install failed!" 1>&2; exit 1; }
chmod 440 /etc/sudoers.d/funstore || { echo -e "Install failed!" 1>&2; exit 1; }
}

setLog()
{
if [ ! -d /var/log/funstore ]; then
  mkdir /var/log/funstore
fi
}

checkVersion()
{
    if [ "$BASH_VERSION" = '' ]; then
        clear
        printf "Error!!!\n\n\nPlease execute \"chmod +x "$fileName"\" and then run \"./"$fileName"\".  \n\n"
        exit
    fi
}

updateAptitude()
{
    echo "Updating Aptitude"
    sudo apt-get -y update
}

getCurl()
{
    if [ -f $CURL ];then echo ""
    else
       echo "$CURL command is not installed."
       echo "Running sudo apt-get install curl"
       sudo apt-get -y install curl
       TEMPVAR = "1";
    fi

    if [ "$TEMPVAR" = "1" ]; then exit; fi
}

getApache()
{
    if [ -f $APACHE ];then echo ""
    else
       echo "$APACHE command is not installed."
       echo "Running sudo apt-get install apache"
              sudo apt-get -y install apache2
       TEMPVAR = "1";
    fi

    if [ "$TEMPVAR" = "1" ]; then exit; fi
}

setupApache()
{
sudo service apache2 restart
apt-get install -y libapache2-mod-authnz-external
sudo rm -f /etc/apache2/mods-enabled/authnz_external.load
sudo a2enmod rewrite authnz_external || { echo -e "Install failed!" 1>&2; exit 1; }
sudo a2dissite default || { echo -e "Install failed!" 1>&2; exit 1; }
sudo a2ensite funstore || { echo -e "Install failed!" 1>&2; exit 1; }
sudo service apache2 restart || { echo -e "Install failed!" 1>&2; exit 1; }
}

getPHP()
{
    if [ -f $PHP ];then echo ""
    else
       echo "$PHP command is not installed."
       echo "Running sudo apt-get install php"
       sudo apt-get install -y php5
       TEMPVAR = "1";
    fi

    if [ "$TEMPVAR" = "1" ]; then exit; fi
}

getDependencies()
{
sudo apt-get -y install libapache2-mod-php5 
sudo apt-get -y install libapache2-mod-perl2 
sudo apt-get -y install php5-cli 
sudo apt-get -y install php5-cgi
sudo apt-get -y install php5-common 
sudo apt-get -y install php5-curl 
sudo apt-get -y install php5-dev 
sudo apt-get -y install php5-gd
sudo apt-get -y install php5-imap 
sudo apt-get -y install php5-ldap 
sudo apt-get -y install php5-mhash 
sudo apt-get -y install php5-mysql 
sudo apt-get -y install php5-odbc
sudo apt-get -y install php5-sqlite
sudo apt-get -y install msmtp 
sudo apt-get -y install msmtp-mta 
sudo apt-get -y install ca-certificates
sudo apt-get -y install wget dos2unix
sudo apt-get -y install avahi-daemon
sudo apt-get -y install ethtool 
sudo apt-get -y install wireless-tools 
sudo apt-get -y install msmtp
}

getNode()
{
wget http://node-arm.herokuapp.com/node_latest_armhf.deb 
sudo dpkg -i node_latest_armhf.deb
sudo rm node_latest_armhf.deb
sudo apt-get install -y build-essential python-dev python-rpi.gpio
}

funstoreSetup()
{
cd /usr/share/funstore
echo "We will get some files from internet to work for you"
sudo wget funstore.io/setup/$BOARD/funstore.tar.gz 
sudo tar -zxvf funstore.tar.gz
sudo chmod -fR 755 funstore
cd funstore/ajax
sudo touch tmpscript.sh
sudo chmod 775  tmpscript.sh
sudo chown -fR www-data:www-data /usr/share/funstore
sudo rm -fR funstore.tar.gz
cd ..
}

editSudoer()
{
  sudo chmod a+x /usr/share/funstore/funstore/systemEdit
  sudo chown www-data:www-data /usr/share/funstore/funstore/systemEdit
  sudo /usr/share/funstore/funstore/systemEdit
  sudo rm /usr/share/funstore/funstore/systemEdit
}

setStartup()
{
cd /usr/share/funstore/funstore/config
sudo mv startFunstore /etc/init.d/
sudo chmod +x /etc/init.d/startFunstore
sudo update-rc.d startFunstore defaults
cd /usr/share/funstore/funstore
sudo cp /usr/share/funstore/funstore/config/rc.local /etc/rc.local
sudo chmod a+x /etc/rc.local
sudo rm -fR config
}

getDashboard()
{
  cd /usr/share/funstore/funstore
  sudo wget funstore.io/setup/$BOARD/dashboard.tar.gz 
  sudo tar -zxvf dashboard.tar.gz
  cd /usr/share/funstore/funstore
  sudo rm index.html
  sudo cp /usr/share/funstore/funstore/dashboard/index-main.php index.php
  sudo sed -i 's/raspberrypi/funstore/' /etc/hostname
  sudo sed -i 's/raspberrypi/funstore/' /etc/hosts
  sudo hostname funstore
  sudo /etc/init.d/avahi-daemon restart
  sudo rm -fR /usr/share/funstore/funstore/dashboard.tar.gz

}

npmInstall()
{
    cd /usr/share/funstore/funstore/
    sudo npm install 
}

nodeSetup()
{
    cd /usr/share/funstore/funstore
    npm install
}

nodeLaunch()
{
    cd /usr/share/funstore/funstore
    node index.js &
}

getGrovePi()
{
  cd /usr/share/funstore/funstore
  sudo git clone https://github.com/funstore-io/GrovePi
  cd GrovePi/Script
  sudo chmod +x install.sh
  sudo ./install.sh
}

getWL()
{
  cd /usr/share/funstore/funstore
  sudo wget funstore.io/setup/$BOARD/WL.tar.gz 
  sudo tar -zxvf WL.tar.gz
  sudo chmod +x install
  sudo ./install
  sudo rm -r WL.tar.gz
}

getBasicPackages()
{
sudo apt-get install -y python-pip
sudo pip install pubnub
sudo pip install dweepy
sudo pip install requests==2.5.3
}

getWebIOPi()
{
cd /tmp
git clone https://github.com/funstore-io/webiopi.git
cd webiopi
sudo ./setup.sh 
sudo > /etc/webiopi/passwd
}

getjq()
{
    if [ -f $JQ ];then echo ""
    else
    cd /usr/share/funstore/funstore
    sudo apt-get install -y autoconf
    sudo apt-get install -y libtool
    sudo git clone https://github.com/funstore-io/jq
    cd jq
    sudo autoreconf -i
    sudo ./configure
    sudo make
    sudo make install
    fi
    sudo rm -fR jq
}

main()
{
clear
echo "This program will setup funstore client along with various third party software on your Raspberry Pi."
echo "It is recommended to install it on fresh NOOBS with Raspbian setup and will take approximately 20 minutes to install."
userConfirm=true
confirm() {
   [ "$userConfirm" = true ] && read -p "Proceed? (Enter) - (^C to abort)"
}
confirm

clear
checkVersion
checkRootStatus
updateAptitude
removeFunstore
getCurl
getApache
getPHP
getDependencies || { echo -e "Install failed!" 1>&2; exit 1; }
getNode || { echo -e "Install failed!" 1>&2; exit 1; }
funstoreSetup
setDefaultConfig
npmInstall
getWL || { echo -e "Install failed!" 1>&2; exit 1; }
getjq || { echo -e "Install failed!" 1>&2; exit 1; }
nodeSetup
echo "If you can see connected on your online account, this means all is well"
nodeLaunch
setLog
echo "Dashboard is installed under MIT Licence. Press Enter to proceed."
confirm
getDashboard
sudo chown -fR www-data:www-data /usr/share/funstore/
getWebIOPi
rm /etc/webiopi/config
sudo cp -r /usr/share/funstore/funstore/config/webiopi/config /etc/webiopi/config
sudo chown -fR www-data:www-data /usr/share/funstore/
editSudoer
setupApache
setStartup
getBasicPackages
echo "Grove modules are installed under Creative Commons Attribution-ShareAlike 3.0. Press Enter to proceed."
confirm
getGrovePi
sudo chown -fR www-data:www-data /usr/share/funstore/
echo -e "\nInstallation successful!"
}
main
